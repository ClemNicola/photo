---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import dayjs from 'dayjs';
import TransitionPage from '../../components/animation/TransitionPage.astro';
import NavBar from '../../components/NavBar.astro';

export async function getStaticPaths() {
  const photos: CollectionEntry<'photos'>[] = await getCollection('photos')
  const categories = Array.from(new Set(photos.map(photo => photo.data.category)))
  return categories.map(category => ({
    params: {category}
  }))
}

const { category } = Astro.params;

const filteredPhotos: CollectionEntry<'photos'>[] = await getCollection(
  'photos',
  (photo: CollectionEntry<'photos'>) =>
    photo.data.category === category
);
filteredPhotos.sort((a, b) => a.data.id - b.data.id);

let date = new Date();
---
<Layout title={category} color="bg-creme">
  <TransitionPage title={category}>
    <NavBar color="text-orange" />

    <div class="py-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 sm:gap-12 lg:gap-x-32 lg:gap-y-16">
    {filteredPhotos.map((photo, index) => (
      <div class={`flex flex-col gap-2 justify-center items-center transform ${
        index % 4 === 0 ? 'translate-x-1 translate-y-1 sm:translate-x-2 sm:translate-y-2' :
        index % 4 === 1 ? '-translate-x-1 -translate-y-1 sm:-translate-x-2 sm:-translate-y-2' :
        index % 4 === 2 ? 'translate-x-1 translate-y-1 sm:translate-x-2 sm:translate-y-2' :
        '-translate-x-1 -translate-y-1 sm:-translate-x-2 sm:-translate-y-2'
      }`}>
        <a href={`/category/${photo.data.category}/${photo.data.id}`}>
          <img src={photo.data.image} alt={photo.data.title} class="shader-image w-full h-auto max-w-xs sm:max-w-sm"/>
        </a>
        <p class="text-orange font-title text-lg sm:text-xl lg:text-2xl font-black">{photo.data.id}</p>
      </div>
    ))}
  </div>
  <div class="flex flex-row px-4 sm:px-0 justify-between items-start sm:items-center py-4 font-custom font-normal text-custom-black gap-2 sm:gap-0">
    <p class="text-sm sm:text-base lg:text-lg">{dayjs(date).format('ddd, MMM DD, YYYY HH:mm A')}</p>
    <p class="text-base sm:text-lg lg:text-xl">{category}</p>
  </div>
  </TransitionPage>
</Layout>

<script>
  import { PixelShader } from "../../components/animation/PixelShader";
  document.addEventListener('astro:page-load', () => {
    const images = document.querySelectorAll('.shader-image');
    images.forEach((img) => {
      const shaderEffect = new PixelShader(img);
      img.parentElement?.addEventListener('mouseenter', () => {
        (shaderEffect.isHovered = true), shaderEffect.start();
      });

      img.parentElement?.addEventListener('mouseleave', () => {
        shaderEffect.isHovered = false;
        shaderEffect.stop();
      });
      window.addEventListener('resize', () => {
        if (shaderEffect.isHovered) {
          shaderEffect.resize();
        }
      });
    });
  });
</script>
